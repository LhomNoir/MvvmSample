<Window
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Converters="clr-namespace:codingfreaks.blogsamples.MvvmSample.Logic.Ui.Converters;assembly=MvvmSample.Logic.Ui"
    x:Class="codingfreaks.blogsamples.MvvmSample.Ui.Desktop.MainWindow"
    mc:Ignorable="d"
    Title="{Binding WindowTitle, Mode=OneWay}" Height="379.839" Width="742" MinHeight="400" MinWidth="700"
    WindowStartupLocation="CenterScreen">
    <Window.IsEnabled>
        <Binding Path="BindableProperty" Source="{StaticResource MessageListener}" />
    </Window.IsEnabled>
    <Window.DataContext>
        <Binding Path="Main" Source="{StaticResource Locator}" />
    </Window.DataContext>
    <DockPanel LastChildFill="True">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="Tools">
                <MenuItem Command="{Binding OpenChildCommand, Mode=OneWay}" Header="Open Child" />
                <MenuItem Command="{Binding AddPersonCommand, Mode=OneWay}" Header="Add Person" />
            </MenuItem>
        </Menu>
        <Grid Margin="10" DockPanel.Dock="Bottom">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <GroupBox Grid.Column="0" Grid.Row="0" Header="Progress-Bar with binding">
                <ProgressBar Value="{Binding Progress}" MinHeight="20" />
            </GroupBox>
            <GroupBox Grid.Column="0" Grid.Row="1" Header="Binding &amp; IDataErrorInfo">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <!-- Header -->
                    <TextBlock Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" TextWrapping="Wrap"
                               Style="{DynamicResource Hint}">
                        This area demonstrates the automatic display of error messages and validation. Ensure to enter something in Firstname and Lastname
                        and that the Birthday has a value that results in an age greater or equal than 18 years.
                    </TextBlock>
                    <!-- Firstname -->
                    <Label Content="Firstname:" Grid.Column="0" Grid.Row="1" />
                    <TextBox
                        Text="{Binding PersonModel.Firstname, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                        Grid.Column="1" Grid.Row="1" />
                    <!-- Lastname -->
                    <Label Content="Lastname:" Grid.Column="0" Grid.Row="2" />
                    <TextBox
                        Text="{Binding PersonModel.Lastname, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                        Grid.Column="1" Grid.Row="2" />
                    <!-- Age -->
                    <Label Content="Birthday:" Grid.Column="0" Grid.Row="3" />
                    <DatePicker Grid.Column="1" Grid.Row="3"
                                SelectedDate="{Binding PersonModel.Birthday, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" />
                    <!-- Age -->
                    <Label Content="Age:" Grid.Column="0" Grid.Row="4" />
                    <Label Content="{Binding PersonModel.Age}" Grid.Column="1" Grid.Row="4"
                           Background="{Binding PersonModel.Age, Converter={StaticResource AgeToBrushConverter}, Mode=OneWay}" />
                    <!-- OK-Button -->
                    <Button Grid.Row="5"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            HorizontalAlignment="Right"
                            Margin="5"
                            Content="OK"
                            Width="100"
                            Command="{Binding PersonModel.OkCommand}" />
                </Grid>
            </GroupBox>
            <GroupBox Grid.Column="1" Grid.Row="0" Header="Item Sources" Grid.RowSpan="2">
                <DataGrid ItemsSource="{Binding PersonsView}" 
                          IsSynchronizedWithCurrentItem="True" 
                          EnableRowVirtualization="True" 
                          AutoGenerateColumns="False">
                    <DataGrid.Resources>
                        <Style x:Key="ErrorTextInput" TargetType="{x:Type TextBox}">
                            <Setter Property="Padding" Value="-2" />
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter Property="Background" Value="Red" />
                                    <Setter Property="ToolTip"
                                            Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.RowValidationErrorTemplate>
                        <ControlTemplate>
                            <Grid Margin="0,-2,0,-2"
                                  ToolTip="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=(Validation.Errors)[0].ErrorContent}">
                                <Ellipse StrokeThickness="0" Fill="Red"
                                         Width="{TemplateBinding FontSize}"
                                         Height="{TemplateBinding FontSize}" />
                                <TextBlock Text="!" FontSize="{TemplateBinding FontSize}"
                                           FontWeight="Bold" Foreground="White"
                                           HorizontalAlignment="Center" />
                            </Grid>
                        </ControlTemplate>
                    </DataGrid.RowValidationErrorTemplate>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Firstname"
                                            Binding="{Binding Firstname, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                                            EditingElementStyle="{StaticResource ErrorTextInput}" />
                        <DataGridTextColumn Header="Lastname"
                                            Binding="{Binding Lastname, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"
                                            EditingElementStyle="{StaticResource ErrorTextInput}" />
                        <DataGridTextColumn Header="Birthday"
                                            Binding="{Binding Birthday, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, StringFormat=d}"
                                            EditingElementStyle="{StaticResource ErrorTextInput}" />
                        <DataGridTextColumn Header="Age"
                                            Binding="{Binding Age}"
                                            IsReadOnly="True" />
                    </DataGrid.Columns>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Set date" Command="{Binding SetSomeDateCommand}"
                                      CommandParameter="{Binding PersonModel}" />
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
            </GroupBox>
        </Grid>
    </DockPanel>
</Window>